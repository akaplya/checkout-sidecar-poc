# Copyright Â© Magento, Inc. All rights reserved.
# See COPYING.txt for license details.

enum ProductImageRoleV2 {
    SMALL
    REGULAR
    THUMBNAIL
    SWATCH
}

enum ProductAttributeRoleV2 {
    DISPLAY_AT_PDP
    DISPLAY_AT_PLP
    DISPLAY_AT_SEARCH
}

enum ProductRoleV2 {
    CAN_BE_ADDED_TO_CART
    CAN_SHOW_PRICE
    IS_NEW_PRODUCT
}

input MediaResourceInputV2 {
    url: String!
    label: String
}


type ProductImageV2 {
    resource: MediaResourceV2
    roles: [ProductImageRoleV2]
}

type ProductAttributeV2 {
    name: String!
    value: Json
    roles: [ProductAttributeRoleV2]
}

type ProductPriceV2 {
    regular: MoneyV2!
    final: MoneyV2!
}

type ProductPriceRangeV2 {
    minimum: ProductPriceV2!
    maximum: ProductPriceV2
}

interface ProductV2
    @typeResolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductTypeResolver")
    @doc(description:"Product interface type resolver")
{
    id: ID!
    name: String
    url: String
    description: String
    shortDescription: String
    metaDescription: String
    metaKeyword: String
    metaTitle: String
    roles: [ProductRoleV2]
    images(roles: [ProductImageRoleV2]): [ProductImageV2]
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductImageResolver")
    attributes(roles: [ProductAttributeRoleV2]): [ProductAttributeV2]
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductAttributeResolver")
}

type SimpleProductV2 implements ProductV2 {
    price: ProductPriceV2
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\SimpleProductPriceResolver")
}

type ProductOptionV2 {
    id: ID
    required: Boolean
    multi: Boolean
    title: String
    values: [ProductOptionValueV2!]
}

interface ProductOptionValueV2
    @typeResolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductOptionValueTypeResolver")
    @doc(description:"Product option value interface type resolver")
{
    id: ID
    title: String
}

type BundleOptionValueV2 implements ProductOptionValueV2 {
    id: ID
    title: String
    product: SimpleProductV2
}

type ConfigurableOptionValueV2 implements ProductOptionValueV2 {
    id: ID
    title: String
}

type ProductOptionSelectionV2 {
    productOptionId: ID
    productOptionValueId: ID
}

input ProductOptionSelectionInputV2 {
    productOptionId: ID
    productOptionValueId: ID
}

type ProductVariantV2 {
    selections: [ProductOptionSelectionV2]
    product: SimpleProductV2
}

type ComplexProductV2 implements ProductV2 {
    priceRange: ProductPriceRangeV2
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ComplexProductPriceResolver")
    options(selections: [ProductOptionSelectionInputV2]): [ProductOptionV2]
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ComplexProductOptionsResolver")
    variants(selections: [ProductOptionSelectionInputV2!]!): [ProductVariantV2]
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ComplexProductVariantsResolver")
}

type Query {
    getProductById(ids: [ID]) : [ProductV2]
    @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductResolver")
    @doc(description:"Products test query")
}
