# Copyright Â© Magento, Inc. All rights reserved.
# See COPYING.txt for license details.

enum ProductImageRole {
    SMALL
    REGULAR
    THUMBNAIL
    SWATCH
}

enum ProductAttributeRole {
    DISPLAY_AT_PDP
    DISPLAY_AT_PLP
    DISPLAY_AT_SEARCH
}

enum ProductRole {
    CAN_BE_ADDED_TO_CART
    CAN_SHOW_PRICE
    IS_NEW_PRODUCT
}

input MediaResourceInput {
    url: String!
    label: String
}


type ProductImage {
    resource: MediaResource
    roles: [ProductImageRole]
}

type ProductAttribute {
    name: String!
    value: Json
    roles: [ProductAttributeRole]
}

type ProductPrice {
    regular: Money!
    final: Money!
}

type ProductPriceRange {
    minimum: ProductPrice!
    maximum: ProductPrice
}

interface Product
    @typeResolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductTypeResolver")
    @doc(description:"Product interface type resolver")
{
    id: ID!
    name: String
    url: String
    description: String
    shortDescription: String
    metaDescription: String
    metaKeyword: String
    metaTitle: String
    roles: [ProductRole]
    images(roles: [ProductImageRole]): [ProductImage]
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductImageResolver")
    attributes(roles: [ProductAttributeRole]): [ProductAttribute]
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductAttributeResolver")
}

type SimpleProduct implements Product {
    price: ProductPrice
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\SimpleProductPriceResolver")
}

type ProductOption {
    id: ID
    required: Boolean
    multi: Boolean
    title: String
    values: [ProductOptionValue!]
}

interface ProductOptionValue
    @typeResolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductOptionValueTypeResolver")
    @doc(description:"Product option value interface type resolver")
{
    id: ID
    title: String
}

type BundleOptionValue implements ProductOptionValue {
    id: ID
    title: String
    product: SimpleProduct
}

type ConfigurableOptionValue implements ProductOptionValue {
    id: ID
    title: String
}

type ProductOptionSelection {
    productOptionId: ID
    productOptionValueId: ID
}

input ProductOptionSelectionInput {
    productOptionId: ID
    productOptionValueId: ID
}

type ProductVariant {
    selections: [ProductOptionSelection]
    product: SimpleProduct
}

type ComplexProduct implements Product {
    priceRange: ProductPriceRange
        @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ComplexProductPriceResolver")
    options(selections: [ProductOptionSelectionInput]): [ProductOption]
    variants(selections: [ProductOptionSelectionInput!]!): [ProductVariant]
}

type Query {
    getProductById(ids: [ID]) : [Product]
    @resolver(class: "Magento\\CatalogGraphQlServer\\Resolver\\ProductResolver")
    @doc(description:"Products test query")
}
